library(rio)
library(tidyverse)
library(lubridate)
library(ggplot)

##DATA WRANGLING


jan22 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_01_2022.csv")
feb22 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_02_2022.csv")
mar22 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_03_2022.csv")
apr22 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_04_2022.csv")
may22 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_05_2022.csv")
jun21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_06_2021.csv")
jul21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_07_2021.csv")
aug21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_08_2021.csv")
sep21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_09_2021.csv")
oct21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_10_2021.csv")
nov21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_11_2021.csv")
dec21 <- import("c:/users/laptop/desktop/bike sharing data/cyclistic_12_2021.csv")

#COMBINING THE DATA INTO ONE DATASET

raw_bike_data <- rbind(jan22,
                       feb22,
                       mar22,
                       apr22,
                       may22,
                       jun21,
                       jul21,
                       aug21,
                       sep21,
                       oct21,
                       nov21,
                       dec21)

#EXPLORING THE DATA

View(raw_bike_data)
colnames(raw_bike_data)
str(raw_bike_data)
glimpse(raw_bike_data)
head(raw_bike_data)

#DATA WRANGLING

raw_bike_data <- rename(raw_bike_data,
                        trip_id = ride_id,
                        start_time = started_at,  
                        end_time = ended_at,   
                        from_station_name = start_station_name,  
                        from_station_id = start_station_id,  
                        to_station_name = end_station_name,  
                        to_station_id  = end_station_id, 
                        usertype = member_casual)
                        
                        
    
raw_bike_data <- mutate(raw_bike_data, trip_id = as.character(trip_id))

                      
#DATA CLEANING  


raw_bike_data <- raw_bike_data %>% 
  mutate(date = as.Date(start_time), 
         day = format(as.Date(date), "%d"),
         year = format(as.Date(date), "%Y"), 
         day_of_week = format(as.Date(date), "%A")) 

raw_bike_data <- raw_bike_data %>% 
  mutate(ride_length = difftime(end_time, start_time)) %>% 
  mutate(ride_length = as.numeric((as.character(ride_length))))

glimpse(raw_bike_data)

bike_data <-
  subset(raw_bike_data, ride_length > 0 | start_station_name == "HQ QR")


#DESCRIPTIVE ANALYSIS


mean(bike_data$ride_length)
median(bike_data$ride_length)
max(bike_data$ride_length)
min(bike_data$ride_length)

#OR

summary(bike_data$ride_length)

#COMPARE MEMBERS AND CASUAL USERS 

aggregate(bike_data$ride_length ~ bike_data$usertype, FUN = mean)
aggregate(bike_data$ride_length ~ bike_data$usertype, FUN = median)
aggregate(bike_data$ride_length ~ bike_data$usertype, FUN = max)
aggregate(bike_data$ride_length ~ bike_data$usertype, FUN = min)



bike_data$day_of_week <- ordered(bike_data$day_of_week, levels = c("Sunday", "Monday",
                                                                   "Tuesday", "Wednesday",
                                                                   "Thursday", "Friday",
                                                                   "Saturday"))

aggregate(bike_data$ride_length ~ bike_data$usertype + bike_data$day_of_week, FUN = mean)


bike_data %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, weekday) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(usertype, weekday)
  
#VISUALIZATIONS

bike_data %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, weekday) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(usertype, weekday) %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = usertype)) +
  geom_col(position = "dodge")


bike_data %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, weekday) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(usertype, weekday) %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = usertype)) + 
  geom_col(position = "dodge")

counts <- aggregate(bike_data$ride_length ~ bike_data$usertype + 
                      bike_data$day_of_week, FUN = mean)

write.csv(counts, file = "c:/users/laptop/desktop/average_ride_length.csv")
